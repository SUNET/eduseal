// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pdf/revoke/{transaction_id}": {
            "put": {
                "description": "revoke a singed pdf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eduseal"
                ],
                "summary": "revoke signed pdf",
                "operationId": "pdf-revoke",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction_id",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFRevokeReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pdf/sign": {
            "post": {
                "description": "sign base64 encoded PDF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eduseal"
                ],
                "summary": "Sign pdf",
                "operationId": "pdf-sign",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFSignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFSignReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pdf/validate": {
            "post": {
                "description": "validate a signed base64 encoded PDF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eduseal"
                ],
                "summary": "Validate pdf",
                "operationId": "pdf-validate",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFValidateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFValidateReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pdf/{transaction_id}": {
            "get": {
                "description": "fetch a singed pdf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eduseal"
                ],
                "summary": "fetch singed pdf",
                "operationId": "pdf-fetch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction_id",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.PDFGetSignedReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiv1.PDFGetSignedReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Document"
                }
            }
        },
        "apiv1.PDFRevokeReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "apiv1.PDFSignReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/v1_sealer.SealReply"
                }
            }
        },
        "apiv1.PDFSignRequest": {
            "type": "object",
            "required": [
                "pdf"
            ],
            "properties": {
                "pdf": {
                    "type": "string"
                }
            }
        },
        "apiv1.PDFValidateReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/v1_validator.ValidateReply"
                }
            }
        },
        "apiv1.PDFValidateRequest": {
            "type": "object",
            "properties": {
                "pdf": {
                    "type": "string"
                }
            }
        },
        "helpers.Error": {
            "type": "object",
            "properties": {
                "details": {},
                "title": {
                    "type": "string"
                }
            }
        },
        "helpers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/helpers.Error"
                }
            }
        },
        "model.Document": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "revoked_at": {
                    "type": "integer"
                },
                "sealer_backend": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "v1_sealer.SealReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "sealer_backend": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "v1_validator.ValidateReply": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "intact_signature": {
                    "type": "boolean"
                },
                "transaction_id": {
                    "type": "string"
                },
                "valid_signature": {
                    "type": "boolean"
                },
                "validation_backend": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Datastore API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
